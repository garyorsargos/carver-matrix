{
  "id" : "e7366ba7-0c5d-4e7f-98b5-85c96889d2a2",
  "realm" : "zeus-apps",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : false,
  "rememberMe" : true,
  "verifyEmail" : true,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "4a94c9c9-0686-461a-b251-bce59f32b287",
      "name" : "default-roles-zeus-apps",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "starter-app" : [ "STARTER_READ", "STARTER_WRITE" ],
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "e7366ba7-0c5d-4e7f-98b5-85c96889d2a2",
      "attributes" : { }
    }, {
      "id" : "2bc16982-d4c8-4793-9210-8970440921b4",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "e7366ba7-0c5d-4e7f-98b5-85c96889d2a2",
      "attributes" : { }
    }, {
      "id" : "c4b12234-8518-41c0-8227-18fc2056cad4",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "e7366ba7-0c5d-4e7f-98b5-85c96889d2a2",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "3e87af87-921f-4600-a12a-cf4d12321b75",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "b94a5bce-2f49-4c19-97a0-878eab7eab51",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "266a8f8e-927f-4c79-94ef-da035a708d26",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "5cb6386c-4d0f-43eb-8625-9aea183de054",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "ba263528-e8d5-4bf2-8f87-0d775afcfba3",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "76b3aaa6-629e-435d-a8a2-14a51f13a5a4",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "9e6fe3d8-a6f8-4c24-b187-3ff2eeddf859",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-events", "query-users", "view-realm", "create-client", "manage-users", "query-realms", "view-clients", "view-authorization", "impersonation", "view-events", "manage-authorization", "query-groups", "view-identity-providers", "query-clients", "manage-clients", "manage-realm", "manage-identity-providers", "view-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "19a9322e-2039-4097-9454-d2fb5cf12a3f",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "6bc6000c-878e-4446-9096-48312abed734",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "c92d2288-27be-4bd6-97eb-6faad7fd87f6",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "374f8e55-e986-432b-a7ea-0052ed956e85",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "1a36e7ef-c008-4c86-b406-993ed1a15be8",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "886477ba-5d76-48e3-b4b9-50c5161bfa7f",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "8b167810-dcbb-486f-8301-5136bd03266e",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "b143cef8-7a03-4f65-8300-565965e5ad07",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "209a2579-b63d-4b9d-a55c-b2b34ca65f9d",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "337a2997-b122-4c16-bb3e-46bba4095ff4",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "c7be4acf-4d70-42e4-8944-b07b9448b42f",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      }, {
        "id" : "72747f3d-cab1-4b8f-9c75-66e2ab9932ac",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c74527d8-07ac-4405-b96d-a38b4f321956",
        "attributes" : { }
      } ],
      "starter-app" : [ {
        "id" : "3bf5cd1d-4b9a-4a8b-9f8f-0e28b71f8fab",
        "name" : "STARTER_ADMIN",
        "description" : "Admin user in terms of starter-app resource access. The admin role allows users visit admin restricted pages in the starter-app application, as well as utilize admin restricted api endpoints.",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a8652871-b808-4272-8c2d-6f0bfabbd775",
        "attributes" : { }
      }, {
        "id" : "99379f9b-0c56-495d-8ab9-1fd6a2d4e874",
        "name" : "STARTER_READ",
        "description" : "This role allows a user read access to starter-app resources, to include api's which are restricted to read only.",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a8652871-b808-4272-8c2d-6f0bfabbd775",
        "attributes" : { }
      }, {
        "id" : "31e1d0c1-c497-46b2-8f33-7f192673bd23",
        "name" : "STARTER_WRITE",
        "description" : "This role allows users the ability to create, update, and delete new data or old data from the application, generally in the sense of the database. It also allows users access to resources which require a WRITE role as well as api's that require WRITE.",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "a8652871-b808-4272-8c2d-6f0bfabbd775",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4a3061c1-234e-4ed5-8378-90826b12d31d",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e9d00f13-3e98-4f02-b99d-c5e94feed25b",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "1b9629e9-b31d-4725-bab4-8b623da3cdd6",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "9ea42b5c-3d8a-4614-b238-8e9f942957dd",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "efb7606c-9f31-4acc-b70b-ad7c8009dd48",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "6f1432c9-082b-4eb3-b24b-ba309276ab39",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "38c85128-361c-46e4-830b-0e8d96e516c7",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "5f5315fd-efa6-4a37-a1f5-62c8f1767bbd",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "6d1cfe89-cce3-4352-ab52-f00df6635eb2",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      }, {
        "id" : "52a8a56a-c237-4445-9df0-174b1aaf4e00",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "4a94c9c9-0686-461a-b251-bce59f32b287",
    "name" : "default-roles-zeus-apps",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "e7366ba7-0c5d-4e7f-98b5-85c96889d2a2"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "47078aaa-3956-4741-b5dd-02e2ba05993c",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/zeus-apps/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/zeus-apps/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "41a6ad28-135b-4f51-8f4c-e578ce67168d",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/zeus-apps/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/zeus-apps/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "3f1ed16d-a080-4425-be45-0f59dcda90f0",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "fa6019ae-e958-434a-b307-b1a3dc01c0b4",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e9d00f13-3e98-4f02-b99d-c5e94feed25b",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c74527d8-07ac-4405-b96d-a38b4f321956",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "8d002400-6e20-4c0e-8d0e-d9a56e0b8a04",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/zeus-apps/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/zeus-apps/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "26554731-e924-4205-a4c4-84f6d7cde90e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a8652871-b808-4272-8c2d-6f0bfabbd775",
    "clientId" : "starter-app",
    "name" : "starter-app",
    "description" : "",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "52f81DodPlYafGR23xJenW6UXizwOv0H",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1725459445",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "*",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "f30815f2-35e9-4318-a799-6aa921ebdbf5",
      "name" : "Audience",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-mapper",
      "consentRequired" : false,
      "config" : {
        "included.client.audience" : "starter-app",
        "introspection.token.claim" : "true",
        "included.custom.audience" : "starter-app",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "9e0fe0ea-8fae-4a9e-b920-456e82f51747",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "2f4be33b-723e-4101-a272-967293af1424",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "1bd10f03-a3f0-4d2d-9a70-c75f6b68febb",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3d60e209-863b-48df-9a9f-4a777dd30e35",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b816e48d-eee4-4c9d-adaf-0a82247189be",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "50133b42-8478-473e-8a07-1b58dbf9d9a4",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "d0853666-e50f-492f-9b03-44612c07ea93",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1e11ed58-4c1b-46e2-8b09-9d03528bda6d",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ff773f75-b695-4f94-b317-be8ecb945e8a",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0bf3b752-20cf-4c0d-8054-83a7a5add976",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f2793e17-bef4-41a6-bb1a-88370a260e63",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b5318f3e-c79a-4265-93f1-0ed844a41f9a",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e09afb08-139d-4ee7-a526-0ad51cf1682d",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "fa814251-418b-4665-8eb2-b4fc93e09b7f",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3f5df259-630a-445e-a4e6-61f141fdd3c4",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "55d06129-4265-46ce-b4fc-ea3e1468f219",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d91f07b3-2563-4fa1-bfb1-fad8a8a0af0a",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "126d759b-d846-4cb5-a843-fd533f77ab19",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "7d8b7374-14ae-42a4-8590-3ed106779303",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "6295499e-28ff-4a34-9cc9-ccdbe029e6d8",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "7e1a78be-8972-44a2-aea9-74233deac461",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "d43851be-7c5d-4162-bd76-ff86a1a30114",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "71d37958-807a-457d-b168-f13bcbdecdfb",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "8fc8463b-a0c5-420d-aff5-e49106dfab5a",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "36735821-4eba-49f9-957d-958e9125e612",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "97c7ae7f-0ba4-4323-ab0a-0cea7daca435",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b48903df-93e0-422c-b508-bd582e0399a9",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "4fb99595-e86f-45f1-b206-9c35a06a54a1",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "0fdec14c-2bfe-4938-8544-8556ba1bdbe5",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "46560053-f047-4bfe-877c-d9f1ad4fcdb9",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "09d76f03-9832-48f7-81c2-e457eb08575f",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "bb302378-1e7d-4a80-9122-a3e1f80021dd",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "b0cfb99b-e761-48b7-a251-1d3029bfd501",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "ce10291f-b850-4fcd-bf4f-3ed7b2530e87",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e286a419-5dc9-4cbb-9fbc-c9045af9589b",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5c765ef9-2956-4bad-819a-2f99f11207ef",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "93ccdb0e-335c-48e4-960c-879c4013905d",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : {
    "replyToDisplayName" : "",
    "starttls" : "true",
    "auth" : "true",
    "envelopeFrom" : "",
    "ssl" : "false",
    "password" : "xyxo bujs gjjo wlif",
    "port" : "587",
    "host" : "smtp.gmail.com",
    "replyTo" : "admin@email.com",
    "from" : "admin@email.com",
    "fromDisplayName" : "Carver Matrix Team",
    "user" : "admin@email.com"
  },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "a4fa7533-42ce-4963-bca3-9927d32aab72",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "a1ea852e-ec7a-49c6-b834-f9ba25021410",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "a4e2e9a0-0a15-48f7-837e-ac75ea6097fe",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "6f79d8c1-2013-44bc-a6cd-c64dcb6a9454",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "8bd83b45-67e5-4550-b89f-35924557d5f6",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "cba3d6f8-73f8-4ca5-adca-d344d4caff4f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "8dc380c8-4044-4b11-afea-af42a1e36d31",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "243ba1e6-cecb-4260-a4ed-5b4dbf7f142d",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-full-name-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "1a27c9fa-1694-4ad3-8f5e-213607b035bc",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "bff3a746-9301-4ce8-8bd2-41e689ab559a" ],
        "secret" : [ "-bNxpV3nFlBTbyva0KBupg" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "751b78a5-ee98-4b73-b5cb-7bbcf5d19c14",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEA37ybNJc8sm+pqg1e95jSHQcnJ2osRVGOppZyI4KI55Q5AKGc2o7VC4ouNS5mYolIcRmLkB2RR8iH+iM0E1/mW/b8xhJRNawmndwkE2PXD6hYM78MfJakmBJiGKFWomVcAflzusZqEnIQjKV0geFwZNGJK/mJv0Z9A7ygLg6mmZZQsSAuzI6DldTT9ccnz0tCFTU+gstH3jgPRjnhCiuqUwVrpL5xQpzzo+1zx7OKwlIpGVrR1bDbt2D/gmVuDMkIWewIEtqroH2eutagbokZtqI7NyBfxplpUysRu/vYvgYVW4AG+3xOB1hG5QZRhSin7oKVwQT74NLJfCB592OyoQIDAQABAoIBAAUzQcs+4aUHFeMzNNwd4/JTRnxyyg0haGakVApRwCNbzVhfqUDmNXrzbwAC8FPFe5bPYHBM06HevhRZCZ6SqczE6Jqk9djAw9QC+B6wQSEmyUgInn5t1O0I7llCtLwJDZKpLOCwOGpt1sciGFtldUKOoTjRr7svpPu3gGSZqBMlQWCW/usUjRTrqaCeI65Vu7GCbFFQ2F15/+Fv82kxOYjfpxNyYoxKfaI72u/LwGLiopcAhHOwC1OeSs9WyojpZ+P+1J5seU+uzyEXE+2D7bs+iGVYccB1OWuYPYPRELzLSSybmKgsiNdKqHf3IaZPZ171X96PBdn8W09n9aCbPXECgYEA98uOEWrVdfh5Z1W32B7ZIMgkp/Atmh4wXzLQPcMpVJxfcRpJ33aVAF7aeVmytvKF5jLhQv7OmPzTKqFRAcFIDua606iNV7g30EQAM6lhOAzl0YNmTcam+oFyCh8+K4MMfe09UJuFG4BQfrO3/j4o3o5HQvdijVNpP+U1UJTfoqkCgYEA5yUekiv9gtes7Rpyq2nKUNJcM/bhIAUgSnN8/YtjLys1rg5ZLSP2fAjIqpMygEMVqp0Di1wSyTwcENrttLzJkXp3OaqcsoqvIPUZ5g2SjyheO5buXPjEMcJcMwEvsoxFWcUaYAed9D9vrzb2EtXieK/6T/vcbaBpBoqQEQv8gzkCgYEAscN2lKomnm31chs9Oy7OJ0VNfqi/niuAGhtS5qvmL4vKsFHiowvn0o85fgrKOZJ8WmsvzKcNQRVGy/NUMMUe04nUh1kIpOBEMgVGe8lMNDCUghwYvT0Atv8792T4bbCiuogCD5yx/cusc2isWxjuqtI47yKXsbkf7TWabMeQM5kCgYEAinUAt/xj0fGRY0HZeHZZO0qW8oWq2rxXWGGPeGz7T7Dpacasgk6tgiTc1thvgscsflOpYNwZYLOB+FK72uzPLTaXnlJlpMlQGETZa6Wrqdc7gyRoygY1t7y978uBH8nIbPqVTvqhEkLBiso4YpX+H98B6NFse7p/zuxHWf69FnkCgYEA0SAwf/4SWVv07paHyXe193aTbjGN+3BbSGJnZDouvBrg7/S6RvaLLtc6w5LxJA+QBtopQTRiGDbdj/4i3cJovgK7JjFR4hCyvhZoUDDRtaMuLRm7luc/jxvwEWGIqQul1j4wgLnz4eqSxP/5aBukn+Uuth7fVRRjJMvTXRhQjFg=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICoTCCAYkCBgGQzMMv5zANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAl6ZXVzLWFwcHMwHhcNMjQwNzE5MjA0OTIyWhcNMzQwNzE5MjA1MTAyWjAUMRIwEAYDVQQDDAl6ZXVzLWFwcHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDfvJs0lzyyb6mqDV73mNIdBycnaixFUY6mlnIjgojnlDkAoZzajtULii41LmZiiUhxGYuQHZFHyIf6IzQTX+Zb9vzGElE1rCad3CQTY9cPqFgzvwx8lqSYEmIYoVaiZVwB+XO6xmoSchCMpXSB4XBk0Ykr+Ym/Rn0DvKAuDqaZllCxIC7MjoOV1NP1xyfPS0IVNT6Cy0feOA9GOeEKK6pTBWukvnFCnPOj7XPHs4rCUikZWtHVsNu3YP+CZW4MyQhZ7AgS2qugfZ661qBuiRm2ojs3IF/GmWlTKxG7+9i+BhVbgAb7fE4HWEblBlGFKKfugpXBBPvg0sl8IHn3Y7KhAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFar+S483vBortxYr7cGiVM6qy/iC1uSQliYdPDxHWwWF1DsAbawiMqoNBsnYK68iAeq1KeCIlnCFfBMu3wva6yUJXTwx1qDMs4acBlE0FhgVlvHkBrChbyCFwxJ6ZHN+zR2FDyEO8W8CsdcDBSmBScgycG7A/nGrrwOZP7fzAUPx1KMJekMfDTqQAcWaBIJu2QtQPSu5IfVIaerHjYeAxts66/CdS6XkbrPjxy9eZ2Zcj+HphKxwGAOQBGS2Vxl3MLBI5v8mhG12ntqCjvUFKRuQpkM6nZp2sInHXxM1+RT4HgHmsMgxaW5ltmB6UVGYW2fPHlnwTWDsQQHKcpAcOE=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "7ef8991e-e275-4762-971c-00b3d1cdccff",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "58b25d8a-3919-4e18-a393-908dceabca01" ],
        "secret" : [ "lX_PIQtu0ZAT9k9t983HeXNj3SF1j4eCNgmDYIXT6fY6ucsagr4xuBU93aRuDJUadFKSrE0-84jMhTpgr2GgQQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "e81a6d59-9905-44f3-bac4-cbd115fafa18",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAiKCgiw8GfJFJ3Vs68XxGJM3EONOzdaGBislPwmky5qezKolMi/RYe7LPBldsqN3xkyW5A9Oe+lHvEGVnuB0cX8cE5IPKtgjrP6nUVCm5CByIX1zwEcWNJ2OeJ4ae/Nz9ZH5G50do6GQu76K1/3b73iHmfpuz30eDGeLRmpH/aMMtop34qb0C+n9eMkGPm09SzXtUgIzBRiFLbDcBYf+39t4pIJm0tS5o6W4bLDrXkOmcwSEdngqlv4LuYf08PQzJyrj7BiFf1KMT9fhPVXUW6nViyaJwk6+rlgpOVTQSKonQzTMZ5pFgx3SuPt4BK88DibJhEyJNjgRxPeyKB+lGNwIDAQABAoIBABadO6V4sbKpm6fDY3C4CKYr1sgvJjuYpWfy5TxBDFdIN6wZOK3Lnl+vG3wpuUcEIWmhK0v6WYyGRkMY/b9oNhuWRfWK6OETfdi2Q/pAQ6uXiWz7ZZMTd0cnQnS5YBRrgZeCHTtHwxIADxLEBErKB2tfgha/r9iLriP5OodSlgthUQGLIoLurPBKAuIyFxsjYYIFaNcfwm+2NzDTdP6wER5ekSUPynt9HITADChx7mhZYwKuUfw6XNnptyFFwgS515nei+zQL7jrSi/Z7Yz9NQ2hQ9m2N8FppvPhqQ7lwsuJMnuUKSgHxweIwFptTxDqqk2GLtT5xSZrVWrIH59eSckCgYEAu6v+F2tFo5U6lpoRv7wMpdNS3w4Le0bAp785jvtnGnjnxCKMD5+OUh7R7f2i6sA2QoAGLMjupkx7blD4CNEgalRYUhO6PBSuUCxwzDxzZQejCoJPWYmEs01FGmrY+6vI1L20qIxK0tvvV60XMZ2H8o7jCOYXGTcIiNntirFxjf8CgYEAul8G9oSKtDntujJXjBBuYRgPoovBKC4E5aLx3RGlloIKd0R6GOHzfa2y2KvA4tx7V2u1AkKFqiEQtAWfzAff854dyFyWigqIEqqlal3vlLhqutshEh218/DqwG2NTc5qX1zHvRGExizBlF+Wa1hhuqKO9JqsuyZYUSvl7L3BN8kCgYBa+Iw6ne0r1nKH/jcMUgNvfnh1V0GJiEprBe7IuGTKGEGAeZ6bFCTQ+c+ZJZGLaZDju1tC6kOEqR5L40PYQkcMQ8ZsQtPLu9qjUmd7GPJ2zrThqzj7lgWVRKdynsh/dk3rkem4qgi7HZFvVqAflNUJZun2rlIUDvE8JSdYS5tX0QKBgF6o+3lkkqq9rZBgF3VttxKbzP0rbL1CunwEikJVvzw16qjvX/CZezn/apKAkiToBcG+VB7EuO1ThA9bt/FCoq4zRj9JP7D3bmvEvuXKtnBcRuGHgUGZU5yGZkW8nwPA7uhm0JCogD7D5sK81kLJjkHkZSW6FjesXzlDSbI4IxZ5AoGAVvoJOYogB3slm8UEbeZaC2qao+hUastThmA3JlN5acrRpExA4G88BdRRLsL+Rv2YO/saS2mIOx3RkJP8HVKdXiSf9tbeD0JGQZ5FVmcH63t0Y63LbsWUYJTaaqXAhGgCPD8++eQT1dSM/piZmetXJv4k73gs7rwDucXm1qvdIO0=" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICoTCCAYkCBgGQzMMwfzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAl6ZXVzLWFwcHMwHhcNMjQwNzE5MjA0OTIyWhcNMzQwNzE5MjA1MTAyWjAUMRIwEAYDVQQDDAl6ZXVzLWFwcHMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCIoKCLDwZ8kUndWzrxfEYkzcQ407N1oYGKyU/CaTLmp7MqiUyL9Fh7ss8GV2yo3fGTJbkD0576Ue8QZWe4HRxfxwTkg8q2COs/qdRUKbkIHIhfXPARxY0nY54nhp783P1kfkbnR2joZC7vorX/dvveIeZ+m7PfR4MZ4tGakf9owy2infipvQL6f14yQY+bT1LNe1SAjMFGIUtsNwFh/7f23ikgmbS1LmjpbhssOteQ6ZzBIR2eCqW/gu5h/Tw9DMnKuPsGIV/UoxP1+E9VdRbqdWLJonCTr6uWCk5VNBIqidDNMxnmkWDHdK4+3gErzwOJsmETIk2OBHE97IoH6UY3AgMBAAEwDQYJKoZIhvcNAQELBQADggEBADb5lS4IV3qjakZocqfaYVlGDopVm8LVvU1ww+xbhOG2i2CxlKpCwdYUVDLP3ujqIyVKbre8nNk8h5FI+bC+K9EYABF2Ah75+IPv8oojqh9TZabaAG2RORk8ZPIlfFQAbkTWg9KLCPRDNbpmdakYV3de6fyJOEF9cKVjgfI13W5NdVNEBPWrbYMZH32LTH1TeUUZTB//luo8qzXJ2pa3KJz2DDKszBZWI/tUvJ84ikUaBnUHGAPHxqAAD4YUJD0JvYKPRyvArfSBHBtb2IYsQ9ghdwCgIaTstBiije43yT1iFSqNFim6iwxnD1w54PsCfeEKUFdSfg5JHGlDAa9FJrs=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "c6454a47-c2b8-4e94-b38c-add1aeccce35",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fe35ea68-9c9b-4b3d-a762-02f206bea87f",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0ba5cedd-5072-4644-a163-467afa320651",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c09349c4-92b7-4550-bf3a-1593b46a1b5b",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "826ded33-9359-4657-891a-ed29453cd78e",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b8e2e210-3168-4e26-a979-5d17273a0029",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c5693e45-9bab-4b2b-9b62-e8df57aafcec",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a4a9877c-4dc9-4d36-8b94-94305848c5a4",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b1dc065b-586d-4c12-ad31-706b639dc57c",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4b1f9651-b369-4a3e-89d3-d1d079138296",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2feaf544-f687-47a1-a652-8d8dcf0a0d95",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1e0f8b59-3fcf-46ca-9c83-4e9ae5137560",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5a6ef3bc-a012-4ba7-8bea-5b37f2821f97",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9c468e36-f930-41e6-94e3-ce6069bdc58b",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f49b683d-6ed9-4559-985a-2ebbe94418e3",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "aeec5a7e-e512-4ef8-a460-e7d1eda61466",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5f630415-40b1-4e27-91ff-6bb2c942e40b",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f2600019-a55c-4015-a746-3477808a86f7",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "75847caa-3fef-48a1-b4b3-82a7c83bed88",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "215658ca-5196-4ad2-b83b-c518b4a5c1d3",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "23.0.7",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}